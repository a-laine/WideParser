doc :    "( *([key][valeur] *[,;])|([key]?(map|array) *[,;]?))* *"
key :    " *(([a-zA-Z0-9]+)|(["'].*["'])) *[:=]"
valeur : " *["'].*["']"
map :    " *{(([key][valeur] *[,;])*[key][valeur] *[,;]?)? *}"
array :  " *[(([valeur] *[,;])*[valeur] *[,;]?)? *]"


doc complet :
(( *)
	(
		(( *)
			(([a-zA-Z0-9]+)
			|
			(["'].*["']))
		( *)[:=])
		(( *)["'].*["'])
		( *)[,;]
	)
	|
	(
		(( *)
			(([a-zA-Z0-9]+)
			|
			(["'].*["']))
		( *)[:=])?
		(
			(( *){
				(
					(
						(( *)
							(([a-zA-Z0-9]+)
							|
							(["'].*["']))
						( *)[:=])
						(( *)["'].*["'])
					( *)[,;])*
					(( *)
						(([a-zA-Z0-9]+)
						|
						(["'].*["']))
					( *)[:=])
					(( *)["'].*["'])
				( *)[,;]?)?
			( *)})
			|
			(( *)[
				(
					(
						(( *)["'].*["'])
					( *)[,;])*
					(( *)["'].*["'])
				( *)[,;]?)?
			( *)])
		)
	( *)[,;]?)
)*( *)




simplifié (1):
================

"W" = "( *)"
"=" = "[:=]"
";" = "[,;]";

(W
	(
		(W
			(([a-zA-Z0-9]+)
			|
			(["'].*["']))
		W=)
		(W["'].*["'])
		W;
	)
	|
	(
		(W
			(([a-zA-Z0-9]+)
			|
			(["'].*["']))
		W=)?
		(
			(W{
				(
					(
						(W
							(([a-zA-Z0-9]+)
							|
							(["'].*["']))
						W=)
						(W["'].*["'])
					W;)*
					(W
						(([a-zA-Z0-9]+)
						|
						(["'].*["']))
					W=)
					(W["'].*["'])
				W;?)?
			W})
			|
			(W[
				(
					(
						(W["'].*["'])
					W;)*
					(W["'].*["'])
				W;?)?
			W])
		)
	W;?)
)*W




simplifié (2):
================

"W" = "( *)"    // white spaces, succession blancs (' ','\t','\n')
"=" = "[:=]"
";" = "[,;]";
"S" = (["'].*["'])   // string, chaine litterale
"K" = ([a-zA-Z0-9]+)  // key, cle syntaxiquement correct

(W((W(K|S)W=)WSW;)|((W(K|S)W=)?((W{(((W(K|S)W=)WSW;)*(W(K|S)W=)WSW;?)?W})|(W[((WSW;)*WSW;?)?W]))W;?))*W

(W
	(
		(W
			(K|S)
		W=)
	WSW;)
	|
	(
		(W
			(K|S)
		W=)?
		(
			(W{
				(
					(
						(W
							(K|S)
						W=)
					WSW;)*
					(W
						(K|S)
					W=)
					WSW;?
				)?
			W})
			|
			(W[
				(
					(WSW;)*
					WSW;?
				)?
			W])
		)
	W;?)
)*W


